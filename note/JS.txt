■教材URL
URL=https://shk-education-javascript.netlify.app/
URL=https://shk-education-domapi.netlify.app/
URL=https://shk-education-react.netlify.app/

■AltJS言語＝TypeScriptやCoffeeScriptのこと。
JSとは違う言語だが、最終的にはJSにコンパイルする。

■TypeScript
TypeScriptは、JavaScriptのスーパーセットであり
静的型付けを追加したプログラミング言語です。
JavaScriptのコードは有効なTypeScriptのコードでもありますが
TypeScriptは型情報を持つため、開発時にエラーを早期に発見しやすくなります。
型システム: TypeScriptは、変数や関数の引数、戻り値に型を指定できるため、
コードの可読性や保守性が向上します。
型情報により、IDE（統合開発環境）での補完機能が強化されます。
トランスパイラ: TypeScriptは、JavaScriptにコンパイルされるため、
ブラウザやNode.jsで動作することができます。
TypeScriptのコードはまずトランスパイルされ、
最終的にJavaScriptのコードになります。
主な用途: TypeScriptは、特に大規模なアプリケーションやチーム開発において、
型安全性を確保するために使用されます。
コードの予測可能性が高まり、リファクタリングが容易になります。

■Next.js＝フルスタック開発用のフレームワーク
React包括している。

■AltJS言語＝TypeScriptやCoffeeScriptのこと。

■データ型について
プリミティブ型: string、number、boolean、undefined、bigint、symbol
オブジェクト型: オブジェクト、配列、関数、null（ただし、nullは特別な意味を持つ）

■オプショナルチェインニング演算子（?.）
存在しない可能性のあるプロパティに?.を付けておけば
その先のプロパティにアクセスすることができる。
// ▼ 条件演算子を使用する場合
console.log(person.birthplace ? person.birthplace.country : undefined);
// ▼ オプショナルチェインニング演算子を使用する場合
console.log(person.birthplace?.country);

■JSとは
・基本全部オブジェクト
・変数に代入出来る
・オブジェクトのプロパティに紐づけ可
・他の関数オブジェクトに引数として渡せる(コールバック関数)
・メソッドはプロパティに紐づく関数オブジェクト。

■関数の呼び出し型
・関数定義＝thisを持っている。
function abc(){
    console.log("------\n",this,"------\n");    
}

・アロー関数式＝thisを持っていない。
const abc = ()=>{
    console.log("------\n",this,"------\n");
}

・単独で呼び出す→グローバルオブジェクト
  abc();
------------------------------------------------------------------
・オブジェクトのメソッドとして呼び出す→呼び出し元のオブジェクト
const obj = {
    abc:abc,
}
obj.abc();
------------------------------------------------------------------
・new演算子から呼び出す→新しく作成されたオブジェクト
const newobj = new abc();
※空のabc
------------------------------------------------------------------
上記３つ、それぞれでthisの参照先が変わる。
※ただし、アロー関数式はthisを持たないので別。












































