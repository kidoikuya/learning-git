■データ型について
プリミティブ型: string、number、boolean、undefined、bigint、symbol
オブジェクト型: オブジェクト、配列、関数、null（ただし、nullは特別な意味を持つ）

■オプショナルチェインニング演算子（?.）
;条件演算子を使用する場合
console.log(person.birthplace ? person.birthplace.country : undefined);
;オプショナルチェインニング演算子を使用する場合
console.log(person.birthplace?.country);

■new
-new使用時------------------------------------------------------------------------
function Person(name, age) {
  this.name = name;
  this.age = age;
}
const person1 = new Person("田中", 30); // コンストラクタ関数の戻り値は生成されたオブジェクト
console.log(person1.name);  // "田中"
console.log(person1.age);   // 30

-new不使用------------------------------------------------------------------------
function Person(name, age) {
  this.name = name;
  this.age = age;
}
const person1 = Person("田中", 30);  // new不使用だとthisはグローバルオブジェクトを指す
console.log(person1);         // undefined: 戻り値がないため）
console.log(person1.name);    // TypeError: Cannot read properties of undefined (reading 'name')
console.log(globalThis.name); // 田中: グローバルオブジェクトを利用して出力可
-------------------------------------------------------------------------


■グローバルオブジェクト
実行環境: ブラウザ = window
実行環境: node.js  = global
EC2020からはglobalThisを使えば実行環境問わずに参照可能。


■setTimeoutは予約
引数(関数名,LIMIT)でLIMIT後に関数を実行する。戻り値は予約ID
このIDはキャンセルする時に使う。

■vite
WebpackはJSで書かれているのでnode.jsが必要。
似たような機能を使える10倍速いvite(ヴィート)がある。

■モジュール
※https://www.tohoho-web.com/ex/npm.html
node_modulesフォルダに必要ファイルが格納される。
関連しているパッケージが多いので重たい。
だから、githubで公開されているプログラムはnode_modulesが入ってない？
cloneした後に、自分でインストールコマンド(依存関係を一括対応してくれる)を入れる。
$ ls -l
-rw-rw-r--.  1 taro taro   265 Jan 18 01:41 package.json
$ npm install


■ライブラリとフレームワークの違い
ライブラリ:
特定の機能やタスクを実行するための再利用可能なコードの集まり。
開発者が必要に応じてライブラリの機能を呼び出して利用します。
例: jQuery、Lodash、Apache Commons など。

フレームワーク:
アプリケーションの構造や設計を提供する骨組みです。
開発者はフレームワークが定めたルールやガイドラインに従ってアプリケーションを構築します。
堅牢な開発が出来るので、大規模開発でよく利用される。
例: Spring、Django、Ruby on Rails など。

■非同期通信
varを使ってるかも。
フェッチが出てきてる、




















