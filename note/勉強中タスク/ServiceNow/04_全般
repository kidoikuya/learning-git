■インスタンスのトップページ
  オープンUIビルダー:画面構築
  カスタムユーザーエクスペリエンス：
  ワークフロースタジオ：図とか使える感じ
  クリエータースタジオ：

■振り返り
クライアントスクリプトの練習
クライアントスクリプトで出来るようになっておくと良いと思ったこと
 
  1. フィールド入力直後の入力値のバリデーション

  2. 送信時（送信ボタンクリック時）の入力値チェック（相関項目のチェックも含む）
     不正な場合は警告ダイアログを表示して、送信をキャンセル
     個別だけじゃなく、複数のフィールドの整合性(送還項目)が取れているようにonsubmit時のチェック。

  3. 他のテーブルからのデータ参照
     あるフィールドが外部キーになっている場合
     入力された値から該当するテーブルよりレコードを参照して
     自動で関連の読み取り専用フィールドに値を入力する仕掛け

  4. 関連フィールドの値により、動的なフィールドの表示／非表示の切り替え

  5.ユーザー（ログインしている）のグループや権限、ロールによるフィールドの表示／非表示の制御
・g_userでユーザ名とロールは取得出来たので、ロールでフィールドの表示非表示は出来た。
  g_userではどうしてもグループ名が取得出来なかったので試したこと。
  タイプを参照にして、sys_user_grmemberを参照しようとしたけどsys IDしか参照出来なかった。
  スクリプトインクルードにサーバ側スクリプトを書いて、クライアントスクリプトから呼び出そうとしたけど駄目。
  デベロッパーツールでエラー見るとスクリプトの呼び出しでNOT FOUNDになってる所までは見て封印した。





■sys_idから取得する方法らしい
var sys_id = '62826bf03710200044e0bfc8bcbe5df1'; // SysIDを何らかの方法で知っている前提
var gr = new GlideRecord('sys_user');
if (gr.get('sys_id', sys_id)) {
  // 処理 例: gs.info(gr.getValue('user_name'));
}



■貰ったコード
-------------------------------------------------------------------------------------------------------
・クライアントスクリプト
const ga = new GlideAjax("ShkHandsOn");  // "ShkHandsOn"というScript Includeを指定
ga.addParam("sysparm_name", "getParams");  // Script Include内のメソッド名
ga.addParam("param1", param1);  // 送信するパラメータ
ga.addParam("param2", param2);  // 送信するパラメータ
ga.getXMLAnswer(function(answer){ // ここでgaに蓄積した情報を基にShkHandsOnを実行し非同期で待機後にanswer受取りコールバック実行。
    const data = JSON.parse(answer);  // レスポンスをJSONとして解析
    console.log("★★★★★★★★★★★★★★★★ data= "+data);
    console.log(JSON.stringify(data, null, 2));
});

-------------------------------------------------------------------------------------------------------















■TODO
・jQuery利用
・UIアクション利用
・親テーブルから子テーブルに値がいくビジネスルール。
----------------------------------------------------
・DOMAPIが書けないの改善したい
・Classとプロトタイプ継承の復習
・GlideAjaxとメソッドまとめる
・g_userとg_form以外も調べて、メソッドもまとめる


■進め方
①会議室予約システムのワークフロー
承認者
担当者 会議予約胃
メール通知が良く
--------------------------------------------------------
こういう一連の流れを図で作成する。
ワークフローデザイナーorワークフロースタジオを調べてみて。
--------------------------------------------------------

②外部サービス
ServiceNowとチームスのログインIDとかカレンダーを連携させることで管理コスト
ServiceNowからデータを引っ張ってチームス上に会議情報を表示させたり出来る。
※案件がどこまで求められるかによって勉強範囲が決まる

・REST思想
HTTPを使う、HTTP上にAPIを構築するために
この思想を一部使ったのをRESTAPI、完全に思想に乗ったのはRESTFULL
URLの設計でもREST、リクエストパラメータ。
URLの送り方(GET/POST/PUT/DELTE)によって動作を返るコントローラ―みたいな事ができる。
GET
sh-k.com/resaverrvation/book get
body-----------
?room_id=101
---------------
POST
sh-k.com/resaverrvation/book?room_id/101


ログインしている場合に下記みたいに
apikey = fsdflkasjdfl;kasjdflkjsdalf

GET/該当する会議室の予約情報の取得／予約入力フォーム取得
POST/会議室の新規予約
PUT/既存の予約情報の更新
DELTE/予約のキャンセル

