操作              : コマンド例
------------------:------------------------------------------------------
データベース操作    :
  データベース作成   : CREATE DATABASE database_name;
  データベース選択   : USE database_name;
  データベース一覧   : SHOW DATABASES;
  データベース削除   : DROP DATABASE database_name;
  
テーブル操作        :
  テーブル作成      : CREATE TABLE table_name (column1 datatype, ...);
  テーブル一覧表示  : SHOW TABLES;
  テーブル構造表示  : DESCRIBE table_name;
  テーブル削除      : DROP TABLE table_name;
  テーブル変更      : ALTER TABLE table_name ADD column_name datatype;
  テーブル名変更    : RENAME TABLE old_name TO new_name;

データ操作 (CRUD)    :
  データ挿入        : INSERT INTO table_name (col1, col2) VALUES (val1, val2);
  データ取得        : SELECT column1, column2 FROM table_name;
  条件付きデータ取得: SELECT * FROM table_name WHERE condition;
  データ更新        : UPDATE table_name SET column1 = value WHERE condition;
  データ削除        : DELETE FROM table_name WHERE condition;

その他の操作         :
  データ全削除      : TRUNCATE TABLE table_name;
  インデックス作成  : CREATE INDEX index_name ON table_name (column_name);
  インデックス削除  : DROP INDEX index_name ON table_name;
  ユーザー作成      : CREATE USER 'username'@'host' IDENTIFIED BY 'password';
  ユーザー権限付与  : GRANT ALL PRIVILEGES ON database_name.* TO 'username'@'host';
  権限削除          : REVOKE ALL PRIVILEGES ON database_name.* FROM 'username'@'host';


■カラムとレコードを指定して追加
※空のテーブルにわざわざカラムだけ設定しなくてもよい、同時指定可能だから。
INSERT INTO board (login_id, contents, clear)
VALUES
('user123', 'First post content', 'http://example.com/clear1'),
('user456', 'Second post content', 'http://example.com/clear2');

mysql> select * from board;
+----+---------------------+----------+------------------------+---------------------+
| id | mydate              | login_id | contents               | clear               |
+----+---------------------+----------+------------------------+---------------------+
|  1 | 2024-11-20 12:34:56 | user123  | First post content     | http://example.com/clear1 |
|  2 | 2024-11-20 12:35:12 | user456  | Second post content    | http://example.com/clear2 |
+----+---------------------+----------+------------------------+---------------------+
2 rows in set (0.00 sec)

■課題5で出たエラー達
・ぬるぽ
Actionからnullを返答している設計になっていた。
そもそもFrontコントローラーで一元管理するはずなのに
呼び出し先のActionでフォワードしてnullをreturnしてたから。
Actionを全て移送先のパスを返すように修正して
Frontコントローラで受けてフォワードするように修正した。

・SQLのsyntaxエラー
これはテーブルの属性とは違う属性でインサートしようとしたから。
下記コマンドで属性が見れる。

mysql> DESCRIBE board;
+----------+--------------+------+-----+-------------------+-------------------+
| Field    | Type         | Null | Key | Default           | Extra             |
+----------+--------------+------+-----+-------------------+-------------------+
| id       | int          | NO   | PRI | NULL              | auto_increment    |
| mydate   | datetime     | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED |
| login_id | varchar(100) | NO   |     | NULL              |                   |
| contents | varchar(100) | NO   |     | NULL              |                   |
+----------+--------------+------+-----+-------------------+-------------------+
4 rows in set (0.00 sec)

auto_incrementは自動採番機能なので指定不要
DEFAULT_GENERATEDは自動で日付を入力してくれるのでこれも指定不要。
だから指定するのはlogin_idとcontentsだけでよい。

String sql = "INSERT INTO board (login_id, contents) VALUES (?, ?)";

try (Connection conn = getConnection();
      PreparedStatement stmt = conn.prepareStatement(sql)) {

    stmt.setString(1, loginId);
    stmt.setString(2, contents);
    stmt.executeUpdate();

・java.lang.ClassCastException
オブジェクトの型キャストが不正な場合にスローされます。
具体的には、オブジェクトをある型にキャストしようとしたとき、
実際にはそのオブジェクトがキャスト先の型でない場合にこの例外が発生します。






















